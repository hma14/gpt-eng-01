{"ast":null,"code":"var _jsxFileName = \"H:\\\\programs\\\\openai\\\\my-gpt-eng-01\\\\workspace\\\\src\\\\index.js\";\nimport React from 'react';\nimport client from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst container = document.getElementById('root');\nconst root = client.createRoot(container); // createRoot(container!) if you use TypeScript\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["React","client","App","jsxDEV","_jsxDEV","container","document","getElementById","root","createRoot","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["H:/programs/openai/my-gpt-eng-01/workspace/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport client from 'react-dom/client';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = client.createRoot(container); // createRoot(container!) if you use TypeScript\r\nroot.render(<App />);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,MAAMC,IAAI,GAAGP,MAAM,CAACQ,UAAU,CAACJ,SAAS,CAAC,CAAC,CAAC;AAC3CG,IAAI,CAACE,MAAM,eAACN,OAAA,CAACF,GAAG;EAAAS,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC"},"metadata":{},"sourceType":"module"}