{"ast":null,"code":"var _jsxFileName = \"H:\\\\programs\\\\openai\\\\my-gpt-webapp\\\\gpt-engineer\\\\projects\\\\proj01\\\\workspace\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserList from './UserList';\nimport UserForm from './UserForm';\nimport db from '~/app.py';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    const response = await api.getUsers();\n    setUsers(response.data);\n  };\n  const addUser = async user => {\n    const response = await api.addUser(user);\n    if (response.data.user_id) {\n      fetchUsers();\n    }\n  };\n  const updateUser = async user => {\n    const response = await api.updateUser(user._id, user);\n    if (response.data.success) {\n      fetchUsers();\n    }\n  };\n  const deleteUser = async user => {\n    const response = await api.deleteUser(user._id);\n    if (response.data.success) {\n      fetchUsers();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Address Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onDelete: deleteUser,\n      onUpdate: updateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      onAdd: addUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UserList","UserForm","db","jsxDEV","_jsxDEV","App","_s","users","setUsers","fetchUsers","response","api","getUsers","data","addUser","user","user_id","updateUser","_id","success","deleteUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onUpdate","onAdd","_c","$RefreshReg$"],"sources":["H:/programs/openai/my-gpt-webapp/gpt-engineer/projects/proj01/workspace/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport UserList from './UserList';\r\nimport UserForm from './UserForm';\r\nimport db from '~/app.py';\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    const response = await api.getUsers();\r\n    setUsers(response.data);\r\n  };\r\n\r\n  const addUser = async (user) => {\r\n    const response = await api.addUser(user);\r\n    if (response.data.user_id) {\r\n      fetchUsers();\r\n    }\r\n  };\r\n\r\n  const updateUser = async (user) => {\r\n    const response = await api.updateUser(user._id, user);\r\n    if (response.data.success) {\r\n      fetchUsers();\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (user) => {\r\n    const response = await api.deleteUser(user._id);\r\n    if (response.data.success) {\r\n      fetchUsers();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Address Book</h1>\r\n      <UserList users={users} onDelete={deleteUser} onUpdate={updateUser} />\r\n      <UserForm onAdd={addUser} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,EAAE,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,QAAQ,CAAC,CAAC;IACrCJ,QAAQ,CAACE,QAAQ,CAACG,IAAI,CAAC;EACzB,CAAC;EAED,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC9B,MAAML,QAAQ,GAAG,MAAMC,GAAG,CAACG,OAAO,CAACC,IAAI,CAAC;IACxC,IAAIL,QAAQ,CAACG,IAAI,CAACG,OAAO,EAAE;MACzBP,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,MAAMQ,UAAU,GAAG,MAAOF,IAAI,IAAK;IACjC,MAAML,QAAQ,GAAG,MAAMC,GAAG,CAACM,UAAU,CAACF,IAAI,CAACG,GAAG,EAAEH,IAAI,CAAC;IACrD,IAAIL,QAAQ,CAACG,IAAI,CAACM,OAAO,EAAE;MACzBV,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,MAAMW,UAAU,GAAG,MAAOL,IAAI,IAAK;IACjC,MAAML,QAAQ,GAAG,MAAMC,GAAG,CAACS,UAAU,CAACL,IAAI,CAACG,GAAG,CAAC;IAC/C,IAAIR,QAAQ,CAACG,IAAI,CAACM,OAAO,EAAE;MACzBV,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEL,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACoB,QAAQ,EAAEP,UAAW;MAACQ,QAAQ,EAAEX;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEtB,OAAA,CAACH,QAAQ;MAAC4B,KAAK,EAAEf;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACpB,EAAA,CAxCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}