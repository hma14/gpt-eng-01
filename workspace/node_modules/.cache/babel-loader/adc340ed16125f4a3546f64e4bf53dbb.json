{"ast":null,"code":"var _jsxFileName = \"H:\\\\programs\\\\openai\\\\my-gpt-webapp\\\\gpt-engineer\\\\projects\\\\proj01\\\\workspace\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserList from './UserList';\nimport UserForm from './UserForm';\nimport EditUserForm from './EditUserForm';\nimport { get_Users, update_User, add_User, delete_User } from './api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api/users';\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await get_Users();\n      setData(response);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n    }\n  };\n  const addUser = async user => {\n    const response = await add_User(user);\n    if (response['user_id']) {\n      fetchUsers();\n    }\n  };\n  const updateUser = async (userId, user) => {\n    const response = await update_User(userId, user);\n    if (response.data.success) {\n      fetchUsers();\n    }\n  };\n  const deleteUser = async userId => {\n    const response = await delete_User(userId);\n    console.log(response.success);\n    if (response.success) {\n      fetchUsers();\n    }\n  };\n  const handleEdit = user => {\n    console.log('user = ', user);\n    setSelectedUser(user);\n  };\n  const handleUpdate = async selectedUser => {\n    try {\n      // Make a PUT request to update the user's data\n      const response = await axios.put(`${API_BASE_URL}/${selectedUser._id}`, selectedUser);\n      // Update the users list with the updated user\n      const updatedUsers = users.map(user => user._id === selectedUser._id ? response.data : user);\n      setUsers(updatedUsers);\n      setSelectedUser(null); // Clear the selected user\n      fetchUsers();\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      data: data,\n      onDelete: deleteUser,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      onAdd: addUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditUserForm, {\n      user: selectedUser,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gcHWpsTmd4ZWBLb5x1vyZzBrEDQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UserList","UserForm","EditUserForm","get_Users","update_User","add_User","delete_User","axios","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","data","setData","selectedUser","setSelectedUser","users","setUsers","fetchUsers","response","error","console","addUser","user","updateUser","userId","success","deleteUser","log","handleEdit","handleUpdate","put","_id","updatedUsers","map","className","children","onDelete","onUpdate","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","_c","$RefreshReg$"],"sources":["H:/programs/openai/my-gpt-webapp/gpt-engineer/projects/proj01/workspace/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport UserList from './UserList';\r\nimport UserForm from './UserForm';\r\nimport EditUserForm from './EditUserForm';\r\nimport { get_Users, update_User, add_User, delete_User } from './api';\r\nimport axios from 'axios';\r\n\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/users';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(); \r\n  }, []);\r\n\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response =  await get_Users();     \r\n      setData(response)      \r\n    } catch (error) {\r\n      console.error(\"Error fetching data: \", error)\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const addUser = async (user) => {\r\n    const response = await add_User(user);\r\n    if (response['user_id']) {\r\n      fetchUsers();\r\n    }\r\n  };\r\n\r\n  const updateUser = async (userId, user) => {\r\n\r\n    const response = await update_User(userId, user);\r\n    \r\n    if (response.data.success) {\r\n      fetchUsers();\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userId) => {\r\n    const response = await delete_User(userId);\r\n    console.log(response.success)\r\n    if (response.success) {\r\n      fetchUsers();\r\n    }\r\n  };\r\n\r\n\r\n  const handleEdit = (user) => {\r\n    console.log('user = ', user)\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleUpdate = async (selectedUser) => {\r\n    try {\r\n      \r\n      // Make a PUT request to update the user's data\r\n      const response = await axios.put(`${API_BASE_URL}/${selectedUser._id}`, selectedUser);\r\n      // Update the users list with the updated user\r\n      const updatedUsers = users.map((user) =>\r\n        user._id === selectedUser._id ? response.data : user\r\n      );\r\n      setUsers(updatedUsers);\r\n      setSelectedUser(null); // Clear the selected user\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <UserList data={data} onDelete={deleteUser}  onUpdate={handleUpdate}/>\r\n      <UserForm onAdd={addUser} />\r\n      <EditUserForm user={selectedUser} onUpdate={handleUpdate} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}