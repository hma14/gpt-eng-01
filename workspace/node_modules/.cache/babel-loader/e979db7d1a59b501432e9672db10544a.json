{"ast":null,"code":"import axios from 'axios';\n\n// Define the base URL for your API\nconst API_BASE_URL = 'http://localhost:5000/api/users';\n\n// Function to get user data\nexport const get_User = async userId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/${userId}`);\n    return response.users;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get user data\nexport const get_Users = async () => {\n  try {\n    var _response$data;\n    const response = axios.get(`${API_BASE_URL}`);\n    response.data.forEach(user => {\n      console.log(\"User:\", user);\n      console.log(\"First Name:\", user.first_name);\n    });\n    console.log((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.length);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to add a new user\nexport const add_User = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/`, userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update an existing user\nexport const update_User = async (userId, updatedData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/${userId}`, updatedData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Delete a user\nexport const delete_User = async userId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","get_User","userId","response","get","users","error","get_Users","_response$data","data","forEach","user","console","log","first_name","length","add_User","userData","post","update_User","updatedData","put","delete_User","delete"],"sources":["H:/programs/openai/my-gpt-webapp/gpt-engineer/projects/proj01/workspace/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Define the base URL for your API\r\nconst API_BASE_URL = 'http://localhost:5000/api/users';\r\n\r\n\r\n// Function to get user data\r\nexport const get_User = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/${userId}`);\r\n        return response.users;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to get user data\r\nexport const get_Users = async () => {\r\n    try {\r\n        const response = axios.get(`${API_BASE_URL}`);\r\n\r\n        response.data.forEach(user => {\r\n            console.log(\"User:\", user);\r\n            console.log(\"First Name:\", user.first_name);          \r\n        });\r\n        \r\n        console.log(response.data?.length)\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to add a new user\r\nexport const add_User = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_BASE_URL}/`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Update an existing user\r\nexport const update_User = async (userId, updatedData) => {\r\n    try {\r\n        const response = await axios.put(`${API_BASE_URL}/${userId}`, updatedData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Delete a user\r\nexport const delete_User = async (userId) => {\r\n    try {\r\n        const response = await axios.delete(`${API_BASE_URL}/${userId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,iCAAiC;;AAGtD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,MAAM,IAAK;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,YAAa,IAAGE,MAAO,EAAC,CAAC;IAC7D,OAAOC,QAAQ,CAACE,KAAK;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IAAA,IAAAC,cAAA;IACA,MAAML,QAAQ,GAAGJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,YAAa,EAAC,CAAC;IAE7CG,QAAQ,CAACM,IAAI,CAACC,OAAO,CAACC,IAAI,IAAI;MAC1BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,IAAI,CAACG,UAAU,CAAC;IAC/C,CAAC,CAAC;IAEFF,OAAO,CAACC,GAAG,EAAAL,cAAA,GAACL,QAAQ,CAACM,IAAI,cAAAD,cAAA,uBAAbA,cAAA,CAAeO,MAAM,CAAC;IAClC,OAAOZ,QAAQ,CAACM,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACxC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACmB,IAAI,CAAE,GAAElB,YAAa,GAAE,EAAEiB,QAAQ,CAAC;IAC/D,OAAOd,QAAQ,CAACM,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG,MAAAA,CAAOjB,MAAM,EAAEkB,WAAW,KAAK;EACtD,IAAI;IACA,MAAMjB,QAAQ,GAAG,MAAMJ,KAAK,CAACsB,GAAG,CAAE,GAAErB,YAAa,IAAGE,MAAO,EAAC,EAAEkB,WAAW,CAAC;IAC1E,OAAOjB,QAAQ,CAACM,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMgB,WAAW,GAAG,MAAOpB,MAAM,IAAK;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACwB,MAAM,CAAE,GAAEvB,YAAa,IAAGE,MAAO,EAAC,CAAC;IAChE,OAAOC,QAAQ,CAACM,IAAI;EACxB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module"}